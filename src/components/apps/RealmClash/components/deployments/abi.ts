export const CHARACTER_CARD_ABI = [
  { type: 'constructor', inputs: [], stateMutability: 'nonpayable' },
  {
    type: 'function',
    name: 'MAX_STAT_VALUE',
    inputs: [],
    outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'POINTS_PER_LEVEL',
    inputs: [],
    outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'STAT_UPGRADE_COST',
    inputs: [],
    outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'XP_PER_LEVEL',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: '_allowedMinters',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: '_tokenIdCounter',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'addExperience',
    inputs: [
      {
        name: '_characterId',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: '_experience', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'approve',
    inputs: [
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'armorContractAddress',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'balanceOf',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'burn',
    inputs: [{ name: '_tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'calculateDamage',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      { name: '', type: 'uint256', internalType: 'uint256' },
      { name: '', type: 'bool', internalType: 'bool' },
      { name: '', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'calculateDefense',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'calculateDodgeChance',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'calculateHealth',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'changeClass',
    inputs: [
      {
        name: '_characterId',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: '_newClassId', type: 'uint8', internalType: 'uint8' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'changeMinterStatus',
    inputs: [{ name: '_minter', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'characters',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      { name: 'id', type: 'uint256', internalType: 'uint256' },
      { name: 'name', type: 'string', internalType: 'string' },
      { name: 'strength', type: 'uint8', internalType: 'uint8' },
      { name: 'defense', type: 'uint8', internalType: 'uint8' },
      { name: 'agility', type: 'uint8', internalType: 'uint8' },
      { name: 'vitality', type: 'uint8', internalType: 'uint8' },
      { name: 'intelligence', type: 'uint8', internalType: 'uint8' },
      { name: 'magicPower', type: 'uint8', internalType: 'uint8' },
      { name: 'wins', type: 'uint16', internalType: 'uint16' },
      { name: 'losses', type: 'uint16', internalType: 'uint16' },
      { name: 'isVeteran', type: 'bool', internalType: 'bool' },
      {
        name: 'lastBattleTime',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'characterClass',
        type: 'uint8',
        internalType: 'enum CharacterCard.CharacterClass',
      },
      { name: 'weaponId', type: 'uint256', internalType: 'uint256' },
      { name: 'armorId', type: 'uint256', internalType: 'uint256' },
      { name: 'statPoints', type: 'uint16', internalType: 'uint16' },
      { name: 'experience', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'classChangeRequirements',
    inputs: [
      {
        name: '',
        type: 'uint8',
        internalType: 'enum CharacterCard.CharacterClass',
      },
    ],
    outputs: [{ name: '', type: 'uint16', internalType: 'uint16' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'classMultipliers',
    inputs: [
      {
        name: '',
        type: 'uint8',
        internalType: 'enum CharacterCard.CharacterClass',
      },
    ],
    outputs: [
      { name: 'strengthMulti', type: 'uint8', internalType: 'uint8' },
      { name: 'defenseMulti', type: 'uint8', internalType: 'uint8' },
      { name: 'agilityMulti', type: 'uint8', internalType: 'uint8' },
      { name: 'vitalityMulti', type: 'uint8', internalType: 'uint8' },
      {
        name: 'intelligenceMulti',
        type: 'uint8',
        internalType: 'uint8',
      },
      { name: 'magicPowerMulti', type: 'uint8', internalType: 'uint8' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'createCharacter',
    inputs: [
      { name: '_name', type: 'string', internalType: 'string' },
      { name: '_uri', type: 'string', internalType: 'string' },
      { name: '_strength', type: 'uint8', internalType: 'uint8' },
      { name: '_defense', type: 'uint8', internalType: 'uint8' },
      { name: '_agility', type: 'uint8', internalType: 'uint8' },
      { name: '_vitality', type: 'uint8', internalType: 'uint8' },
      { name: '_intelligence', type: 'uint8', internalType: 'uint8' },
      { name: '_magicPower', type: 'uint8', internalType: 'uint8' },
      { name: '_classId', type: 'uint8', internalType: 'uint8' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'equipArmor',
    inputs: [
      {
        name: '_characterId',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: '_armorId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'equipWeapon',
    inputs: [
      {
        name: '_characterId',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: '_weaponId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'getApproved',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getCharacterStats',
    inputs: [{ name: '_tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct CharacterCard.CharacterStats',
        components: [
          { name: 'id', type: 'uint256', internalType: 'uint256' },
          { name: 'name', type: 'string', internalType: 'string' },
          { name: 'strength', type: 'uint8', internalType: 'uint8' },
          { name: 'defense', type: 'uint8', internalType: 'uint8' },
          { name: 'agility', type: 'uint8', internalType: 'uint8' },
          { name: 'vitality', type: 'uint8', internalType: 'uint8' },
          {
            name: 'intelligence',
            type: 'uint8',
            internalType: 'uint8',
          },
          { name: 'magicPower', type: 'uint8', internalType: 'uint8' },
          { name: 'wins', type: 'uint16', internalType: 'uint16' },
          { name: 'losses', type: 'uint16', internalType: 'uint16' },
          { name: 'isVeteran', type: 'bool', internalType: 'bool' },
          {
            name: 'lastBattleTime',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'characterClass',
            type: 'uint8',
            internalType: 'enum CharacterCard.CharacterClass',
          },
          {
            name: 'weaponId',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'armorId', type: 'uint256', internalType: 'uint256' },
          {
            name: 'statPoints',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'experience',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getCharactersByOwner',
    inputs: [{ name: '_owner', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256[]', internalType: 'uint256[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getEffectiveAgility',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getEffectiveDefense',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getEffectiveIntelligence',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getEffectiveMagicPower',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getEffectiveStrength',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getEffectiveVitality',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'increaseStats',
    inputs: [
      {
        name: '_characterId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '_strengthIncrease',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: '_defenseIncrease',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: '_agilityIncrease',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: '_vitalityIncrease',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: '_intelligenceIncrease',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: '_magicPowerIncrease',
        type: 'uint8',
        internalType: 'uint8',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'isApprovedForAll',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'operator', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'name',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'ownerOf',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'safeTransferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'safeTransferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setApprovalForAll',
    inputs: [
      { name: 'operator', type: 'address', internalType: 'address' },
      { name: 'approved', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setArmorContract',
    inputs: [{ name: '_address', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setWeaponContract',
    inputs: [{ name: '_address', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'supportsInterface',
    inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'symbol',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tokenByIndex',
    inputs: [{ name: 'index', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tokenOfOwnerByIndex',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'index', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tokenURI',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalSupply',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'unequipArmor',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'unequipWeapon',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateBattleResult',
    inputs: [
      {
        name: '_characterId',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: '_isWinner', type: 'bool', internalType: 'bool' },
      {
        name: '_experienceGained',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'weaponContractAddress',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'Approval',
    inputs: [
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'approved',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ApprovalForAll',
    inputs: [
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'operator',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'approved',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ArmorEquipped',
    inputs: [
      {
        name: 'characterId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'armorId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ArmorUnequipped',
    inputs: [
      {
        name: 'characterId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'armorId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BatchMetadataUpdate',
    inputs: [
      {
        name: '_fromTokenId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: '_toTokenId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'CharacterCreated',
    inputs: [
      {
        name: 'creator',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'name',
        type: 'string',
        indexed: false,
        internalType: 'string',
      },
      {
        name: 'strength',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'defense',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'agility',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'vitality',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'intelligence',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'magicPower',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'characterClass',
        type: 'uint8',
        indexed: false,
        internalType: 'enum CharacterCard.CharacterClass',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'MetadataUpdate',
    inputs: [
      {
        name: '_tokenId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'StatsIncreased',
    inputs: [
      {
        name: 'characterId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'strengthIncrease',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'defenseIncrease',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'agilityIncrease',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'vitalityIncrease',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'intelligenceIncrease',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'magicPowerIncrease',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Transfer',
    inputs: [
      {
        name: 'from',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'to',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'WeaponEquipped',
    inputs: [
      {
        name: 'characterId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'weaponId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'WeaponUnequipped',
    inputs: [
      {
        name: 'characterId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'weaponId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'error',
    name: 'ERC721EnumerableForbiddenBatchMint',
    inputs: [],
  },
  {
    type: 'error',
    name: 'ERC721IncorrectOwner',
    inputs: [
      { name: 'sender', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'owner', type: 'address', internalType: 'address' },
    ],
  },
  {
    type: 'error',
    name: 'ERC721InsufficientApproval',
    inputs: [
      { name: 'operator', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
  },
  {
    type: 'error',
    name: 'ERC721InvalidApprover',
    inputs: [{ name: 'approver', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721InvalidOperator',
    inputs: [{ name: 'operator', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721InvalidOwner',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721InvalidReceiver',
    inputs: [{ name: 'receiver', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721InvalidSender',
    inputs: [{ name: 'sender', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721NonexistentToken',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
  },
  {
    type: 'error',
    name: 'ERC721OutOfBoundsIndex',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'index', type: 'uint256', internalType: 'uint256' },
    ],
  },
]
export const CLASH_BATTLE_SYSTEM_ABI = [
  {
    type: 'constructor',
    inputs: [
      {
        name: '_characterContractAddress',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'BATTLE_TIMEOUT',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'FORFEIT_XP',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'MAX_ATTACK_POINTS',
    inputs: [],
    outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'NORMAL_ATTACK_COST',
    inputs: [],
    outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'NORMAL_ATTACK_MULTIPLIER',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'SPECIAL_ATTACK1_COST',
    inputs: [],
    outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'SPECIAL_ATTACK1_MULTIPLIER',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'SPECIAL_ATTACK2_COST',
    inputs: [],
    outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'SPECIAL_ATTACK2_MULTIPLIER',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'TURN_TIMEOUT',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'VICTORY_XP',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: '_calculateBattleDamage',
    inputs: [
      { name: '_attackStat', type: 'uint256', internalType: 'uint256' },
      {
        name: '_defenseStat',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: '_intelligence', type: 'uint24', internalType: 'uint24' },
      {
        name: '_damageMultiplier',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      { name: 'finalDamage', type: 'uint256', internalType: 'uint256' },
      { name: 'isCritical', type: 'bool', internalType: 'bool' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'acceptChallenge',
    inputs: [
      { name: '_challenger', type: 'address', internalType: 'address' },
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'actionLogCounter',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'actionLogs',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      { name: 'player', type: 'address', internalType: 'address' },
      { name: 'timestamp', type: 'uint256', internalType: 'uint256' },
      { name: 'actionType', type: 'string', internalType: 'string' },
      { name: 'value', type: 'uint256', internalType: 'uint256' },
      { name: 'critical', type: 'bool', internalType: 'bool' },
      { name: 'dodged', type: 'bool', internalType: 'bool' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'activeBattlesByPlayer',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'battleCounter',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'battles',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      { name: 'battleId', type: 'uint256', internalType: 'uint256' },
      { name: 'player1', type: 'address', internalType: 'address' },
      { name: 'player2', type: 'address', internalType: 'address' },
      {
        name: 'characterId1',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'characterId2',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'snapshot1',
        type: 'tuple',
        internalType: 'struct RealmClashBattleSystem.BattleSnapshot',
        components: [
          {
            name: 'characterId',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'name', type: 'string', internalType: 'string' },
          {
            name: 'maxHealth',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'currentHealth',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'attack', type: 'uint256', internalType: 'uint256' },
          { name: 'defense', type: 'uint256', internalType: 'uint256' },
          {
            name: 'dodgeChance',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'intelligence',
            type: 'uint24',
            internalType: 'uint24',
          },
          { name: 'hasForfeit', type: 'bool', internalType: 'bool' },
        ],
      },
      {
        name: 'snapshot2',
        type: 'tuple',
        internalType: 'struct RealmClashBattleSystem.BattleSnapshot',
        components: [
          {
            name: 'characterId',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'name', type: 'string', internalType: 'string' },
          {
            name: 'maxHealth',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'currentHealth',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'attack', type: 'uint256', internalType: 'uint256' },
          { name: 'defense', type: 'uint256', internalType: 'uint256' },
          {
            name: 'dodgeChance',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'intelligence',
            type: 'uint24',
            internalType: 'uint24',
          },
          { name: 'hasForfeit', type: 'bool', internalType: 'bool' },
        ],
      },
      {
        name: 'state',
        type: 'uint8',
        internalType: 'enum RealmClashBattleSystem.BattleState',
      },
      { name: 'startTime', type: 'uint256', internalType: 'uint256' },
      {
        name: 'lastActionTime',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'winner', type: 'address', internalType: 'address' },
      {
        name: 'winningCharacterId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'currentTurnPlayer',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'turnState',
        type: 'uint8',
        internalType: 'enum RealmClashBattleSystem.TurnState',
      },
      {
        name: 'player1AttackPoints',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'player2AttackPoints',
        type: 'uint8',
        internalType: 'uint8',
      },
      { name: 'player1TurnEnded', type: 'bool', internalType: 'bool' },
      { name: 'player2TurnEnded', type: 'bool', internalType: 'bool' },
      { name: 'turnNumber', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'challengePlayer',
    inputs: [
      { name: '_opponent', type: 'address', internalType: 'address' },
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'characterContract',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract ICharacterCard',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'characterContractAddress',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'checkBattleTimeout',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'checkTurnTimeout',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'emergencyCancelBattle',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'endTurn',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'forfeitBattle',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'getActiveBattle',
    inputs: [{ name: '_player', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getBattleActionLog',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: '',
        type: 'tuple[]',
        internalType: 'struct RealmClashBattleSystem.BattleAction[]',
        components: [
          { name: 'player', type: 'address', internalType: 'address' },
          {
            name: 'timestamp',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'actionType',
            type: 'string',
            internalType: 'string',
          },
          { name: 'value', type: 'uint256', internalType: 'uint256' },
          { name: 'critical', type: 'bool', internalType: 'bool' },
          { name: 'dodged', type: 'bool', internalType: 'bool' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getBattleDetails',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      { name: 'player1', type: 'address', internalType: 'address' },
      { name: 'player2', type: 'address', internalType: 'address' },
      {
        name: 'characterId1',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'characterId2',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'state',
        type: 'uint8',
        internalType: 'enum RealmClashBattleSystem.BattleState',
      },
      { name: 'startTime', type: 'uint256', internalType: 'uint256' },
      { name: 'winner', type: 'address', internalType: 'address' },
      {
        name: '_currentTurnPlayer',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'turnState',
        type: 'uint8',
        internalType: 'enum RealmClashBattleSystem.TurnState',
      },
      { name: 'turnNumber', type: 'uint256', internalType: 'uint256' },
      {
        name: 'player1AttackPoints',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'player2AttackPoints',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getBattleProgress',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: 'player1Health',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'player1MaxHealth',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'player2Health',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'player2MaxHealth',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'turnsCompleted',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'totalDamageDealt',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getBattleSnapshots',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: 'snapshot1',
        type: 'tuple',
        internalType: 'struct RealmClashBattleSystem.BattleSnapshot',
        components: [
          {
            name: 'characterId',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'name', type: 'string', internalType: 'string' },
          {
            name: 'maxHealth',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'currentHealth',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'attack', type: 'uint256', internalType: 'uint256' },
          { name: 'defense', type: 'uint256', internalType: 'uint256' },
          {
            name: 'dodgeChance',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'intelligence',
            type: 'uint24',
            internalType: 'uint24',
          },
          { name: 'hasForfeit', type: 'bool', internalType: 'bool' },
        ],
      },
      {
        name: 'snapshot2',
        type: 'tuple',
        internalType: 'struct RealmClashBattleSystem.BattleSnapshot',
        components: [
          {
            name: 'characterId',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'name', type: 'string', internalType: 'string' },
          {
            name: 'maxHealth',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'currentHealth',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'attack', type: 'uint256', internalType: 'uint256' },
          { name: 'defense', type: 'uint256', internalType: 'uint256' },
          {
            name: 'dodgeChance',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'intelligence',
            type: 'uint24',
            internalType: 'uint24',
          },
          { name: 'hasForfeit', type: 'bool', internalType: 'bool' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getChallengeDetails',
    inputs: [
      { name: '_challenger', type: 'address', internalType: 'address' },
      { name: '_opponent', type: 'address', internalType: 'address' },
    ],
    outputs: [
      { name: 'characterId', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getCurrentTurnInfo',
    inputs: [{ name: '_battleId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: 'currentPlayer',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'remainingAttackPoints',
        type: 'uint8',
        internalType: 'uint8',
      },
      { name: 'turnEnded', type: 'bool', internalType: 'bool' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getPendingChallenge',
    inputs: [
      { name: '_challenger', type: 'address', internalType: 'address' },
      { name: '_challenged', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getPlayerChallengers',
    inputs: [{ name: '_player', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'address[]', internalType: 'address[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getPlayerChallenges',
    inputs: [{ name: '_player', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'address[]', internalType: 'address[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getPlayerStatus',
    inputs: [
      { name: '_battleId', type: 'uint256', internalType: 'uint256' },
      { name: '_player', type: 'address', internalType: 'address' },
    ],
    outputs: [
      {
        name: 'currentHealth',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'maxHealth', type: 'uint256', internalType: 'uint256' },
      {
        name: 'attackPoints',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'hasTurnEnded', type: 'bool', internalType: 'bool' },
      { name: 'damageDealt', type: 'uint256', internalType: 'uint256' },
      {
        name: 'damageReceived',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getWaitingPlayers',
    inputs: [],
    outputs: [
      { name: 'players', type: 'address[]', internalType: 'address[]' },
      {
        name: 'characterIds',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'joinMatchmaking',
    inputs: [
      { name: '_characterId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'leaveMatchmaking',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'pendingChallenges',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: '', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'performAttack',
    inputs: [
      { name: '_battleId', type: 'uint256', internalType: 'uint256' },
      { name: '_attackType', type: 'uint8', internalType: 'uint8' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'playerChallengers',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: '', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'playerChallenges',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: '', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'rejectChallenge',
    inputs: [{ name: '_challenger', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setCharacterContract',
    inputs: [{ name: '_newAddress', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateBattleTimeout',
    inputs: [{ name: '_newTimeout', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateTurnTimeout',
    inputs: [{ name: '_newTimeout', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'waitingPlayerCharacterIds',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'waitingPlayers',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'AttackPerformed',
    inputs: [
      {
        name: 'battleId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'attacker',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'attackType',
        type: 'string',
        indexed: false,
        internalType: 'string',
      },
      {
        name: 'damage',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'critical',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
      {
        name: 'dodged',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BattleCanceled',
    inputs: [
      {
        name: 'battleId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'reason',
        type: 'string',
        indexed: false,
        internalType: 'string',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BattleCompleted',
    inputs: [
      {
        name: 'battleId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'winner',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'winningCharacterId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'experienceGained',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BattleCreated',
    inputs: [
      {
        name: 'battleId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'player1',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'characterId1',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BattleStarted',
    inputs: [
      {
        name: 'battleId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'player1',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'player2',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ChallengeAccepted',
    inputs: [
      {
        name: 'challenger',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'challenged',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'battleId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ChallengeIssued',
    inputs: [
      {
        name: 'challenger',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'challenged',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'characterId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ChallengeRejected',
    inputs: [
      {
        name: 'challenger',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'challenged',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'PlayerForfeit',
    inputs: [
      {
        name: 'battleId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'player',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'PlayerJoinedBattle',
    inputs: [
      {
        name: 'battleId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'player2',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'characterId2',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TurnEnded',
    inputs: [
      {
        name: 'battleId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'player',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TurnStarted',
    inputs: [
      {
        name: 'battleId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'currentTurnPlayer',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'attackPoints',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
    ],
    anonymous: false,
  },
]
